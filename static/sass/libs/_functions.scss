/// Gets a duration value.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function _duration($keys...) {
	@return val($duration, $keys...);
}

/// Gets a font value.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function _font($keys...) {
	@return val($font, $keys...);
}

/// Gets a misc value.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function _misc($keys...) {
	@return val($misc, $keys...);
}

/// Gets a palette value.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function _palette($keys...) {
	@return val($palette, $keys...);
}

/// Gets a size value.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function _size($keys...) {
	@return val($size, $keys...);
}

/// Transform side values
/// @param {array} @values Values.
/// @return {array} Values according to direction.
@function side-values($values) {
  @if $dir == rtl and length($values) >= 4 {
    // Reorder right and left positions in list
    @return nth($values, 1) nth($values, 4) nth($values, 3) nth($values, 2);
  }
  @else {
    @return $values;
  }
}

/// Transform corner values
/// @param {array} @values Values.
/// @return {array} Values according to direction.
@function corner-values($values) {
  @if $dir == rtl and length($values) > 1 {
	// Reorder right and left positions in list
	@if length($values) == 2 {
		@return nth($values, 2) nth($values, 1);
	}
	@else if length($values) == 3 {
		@return nth($values, 2) nth($values, 1) nth($values, 2) nth($values, 3);
	}
	@else {
		@return nth($values, 2) nth($values, 1) nth($values, 4) nth($values, 3);
	}
  }
  @else {
    @return $values;
  }
}

@function dir($direction) {
  @if $dir == rtl {
	  @if $direction == left {
		  @return right;
	  }
	  @else {
		  @return left;
	  }
  }
  @return $direction;
}
